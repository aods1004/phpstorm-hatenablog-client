<?php

namespace App\Twig;

/**
 * Class ReversibleTemplate
 * @package App\Twig
 */
class AppExtension extends \Twig_Extension
{
    /**
     * @var array
     */
    protected $meta = [];
    /** @var string */
    protected $templateDirPath;

    /**
     * Meta constructor.
     * @param string $templateDirPath
     */
    public function __construct(string $templateDirPath = '')
    {
        $this->templateDirPath = realpath($templateDirPath);
    }

    /**
     * @return array|\Twig_Function[]
     */
    public function getFunctions()
    {

        return [
            new \Twig_Function('app_entry', function ($data) {
                $this->meta = array_merge($this->meta, $data);
                return '';
            }),
            new \Twig_Function('app_template', function ($name = null) {
                ob_start();
                require $this->templateDirPath . DIRECTORY_SEPARATOR ."$name.php";
                return '<!-- #auto-generated by app_template(\''.$name.'\') -->'
                    . implode(' ', array_map('trim', explode("\n", ob_get_clean())));
            }),
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function getFilters()
    {
        return [
            new \Twig_Filter('meta_data', function ($value) {
                return str_replace("'", "\'", $value);
                }, ['is_safe' =>['html']]),
            new \Twig_Filter('md_content', function ($value) {
                $lines = explode("\n", strtr($value, [
                    "{{" => "{{ '{{' }}",
                    "}}" => "{{ '}}' }}",
                    "{#" => "{{ '{#' }}",
                    "#}" => "{{ '#}' }}",
                    "{%" => "{{ '{%' }}",
                    "%}" => "{{ '%}' }}",
                ]));
                foreach ($lines as & $line) {
                    if (preg_match('|^\<\!\-\- \#auto\-generated by (.*) \-\-\>.*|', trim($line), $match)) {
                        $line = '{{ ' . $match[1] . ' }}';
                    }
                }
                return implode("\n", $lines);
            }, ['is_safe' =>['html']]),
        ];
    }

    /**
     * @return array
     */
    public function getMeta(): array
    {
        return $this->meta;
    }
}